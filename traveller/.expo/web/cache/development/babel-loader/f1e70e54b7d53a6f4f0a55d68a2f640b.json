{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/cruxbreaker/Desktop/React/ReactNative/traveller/App.jsx\";\nimport React, { useEffect } from \"react\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport { Appearance, AppearanceProvider } from \"react-native-appearance\";\nimport { store } from \"./store\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer, DefaultTheme, DarkTheme } from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport HomeStackNavigator from \"./components/HomeStackNavigator\";\nimport ProfileStackNavigator from \"./components/ProfleStackNavigator\";\nimport DrawerComponent from \"./components/DrawerComponent\";\nimport Favourites from \"./screens/Favourites\";\nimport Settings from \"./screens/Settings\";\nimport Support from \"./screens/Support\";\nimport { toggleTheme } from \"./actions/themeActions\";\nvar Drawer = createDrawerNavigator();\n\nvar Navigation = function Navigation() {\n  var theme = useSelector(function (state) {\n    return state.theme;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var subscription = Appearance.addChangeListener(function (_ref) {\n      var colorScheme = _ref.colorScheme;\n      dispatch(toggleTheme(colorScheme));\n    });\n    return function () {\n      return subscription.remove();\n    };\n  }, []);\n  return React.createElement(NavigationContainer, {\n    theme: theme === \"light\" ? DefaultTheme : DarkTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\",\n    edgeWidth: 80,\n    drawerStyle: {\n      width: \"80%\",\n      borderTopRightRadius: 10,\n      borderBottomRightRadius: 10\n    },\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerComponent, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 35\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"HomeStack\",\n    component: HomeStackNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"ProfileStack\",\n    component: ProfileStackNavigator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Favourites\",\n    component: Favourites,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Settings\",\n    component: Settings,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Support\",\n    component: Support,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar App = function App() {\n  return React.createElement(AppearanceProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Navigation, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/cruxbreaker/Desktop/React/ReactNative/traveller/App.jsx"],"names":["React","useEffect","Provider","useSelector","useDispatch","Appearance","AppearanceProvider","store","NavigationContainer","DefaultTheme","DarkTheme","createDrawerNavigator","HomeStackNavigator","ProfileStackNavigator","DrawerComponent","Favourites","Settings","Support","toggleTheme","Drawer","Navigation","theme","state","dispatch","subscription","addChangeListener","colorScheme","remove","width","borderTopRightRadius","borderBottomRightRadius","props","App"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport { Appearance, AppearanceProvider } from \"react-native-appearance\";\nimport { store } from \"./store\";\n\n// Navigation setup\nimport \"react-native-gesture-handler\";\nimport {\n  NavigationContainer,\n  DefaultTheme,\n  DarkTheme,\n} from \"@react-navigation/native\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n\n// import screens\nimport HomeStackNavigator from \"./components/HomeStackNavigator\";\nimport ProfileStackNavigator from \"./components/ProfleStackNavigator\";\nimport DrawerComponent from \"./components/DrawerComponent\";\nimport Favourites from \"./screens/Favourites\";\nimport Settings from \"./screens/Settings\";\nimport Support from \"./screens/Support\";\nimport { toggleTheme } from \"./actions/themeActions\";\n\nconst Drawer = createDrawerNavigator();\n\nconst Navigation = () => {\n  const theme = useSelector((state) => state.theme);\n  const dispatch = useDispatch();\n\n  // load OS theme preference\n  useEffect(() => {\n    const subscription = Appearance.addChangeListener(({ colorScheme }) => {\n      dispatch(toggleTheme(colorScheme));\n    });\n    return () => subscription.remove();\n  }, []);\n\n  return (\n    <NavigationContainer theme={theme === \"light\" ? DefaultTheme : DarkTheme}>\n      <Drawer.Navigator\n        initialRouteName=\"Home\"\n        edgeWidth={80}\n        drawerStyle={{\n          width: \"80%\",\n          borderTopRightRadius: 10,\n          borderBottomRightRadius: 10,\n        }}\n        drawerContent={(props) => <DrawerComponent {...props} />}\n      >\n        <Drawer.Screen name=\"HomeStack\" component={HomeStackNavigator} />\n        <Drawer.Screen name=\"ProfileStack\" component={ProfileStackNavigator} />\n        <Drawer.Screen name=\"Favourites\" component={Favourites} />\n        <Drawer.Screen name=\"Settings\" component={Settings} />\n        <Drawer.Screen name=\"Support\" component={Support} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n};\n\nconst App = () => {\n  return (\n    <AppearanceProvider>\n      <Provider store={store}>\n        <Navigation />\n      </Provider>\n    </AppearanceProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}